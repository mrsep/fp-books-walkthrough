;; Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
;; Triangle      T_(n)=n(n+1)/2      1, 3, 6, 10, 15, ...
;; Pentagonal      P_(n)=n(3n−1)/2       1, 5, 12, 22, 35, ...
;; Hexagonal       H_(n)=n(2n−1)       1, 6, 15, 28, 45, ...

;; It can be verified that T_(285) = P_(165) = H_(143) = 40755.

;; Find the next triangle number that is also pentagonal and hexagonal.

(defn sqrt [x] (Math/sqrt x))
(defn int-sqrt [x] (bigint (Math/sqrt x)))

(defn triangle [n] (bigint (* n (inc n) 0.5)))
(defn pentagonal [n] (bigint (* n (dec (* 3 n)) 0.5)))
(defn hexagonal [n] (* n (dec (* 2 n))))

(defn is-triangle-number? [x] (let [n (int-sqrt (* 2 x))]
                                (== (* 2 x) (* n (inc n)))))
(defn is-pentagonal-number? [x] (== x (pentagonal (bigint (+ 0.1 (/ 1 6) 
                                                          (sqrt (+ 
                                                                 (/ 1 36) 
                                                                 (* (/ 1 3) 2 x))))))))
(defn is-hexagonal-number? [x] (== x (hexagonal (bigint (+ (/ 1 4) 
                                                        (sqrt (* (/ 1 2) (+ x (/ 1 8)))))))))

(defn triangles [])

(defn pentagonals [])

(defn hexagonals [])

(defn solve [] (first (filter?...)
